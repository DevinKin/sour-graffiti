{:system/env
 #profile {:dev :dev
           :test :test
           :prod :prod}

 :nrepl/server
 {:port #long #or [#env NREPL_PORT 7000]
  :bind #or [#env NREPL_HOST "127.0.0.1"]}

 :server/http
 {:port #long #or [#env PORT 3000]
  :host #or [#env HTTP_HOST "0.0.0.0"]
  :handler #ig/ref :handler/ring}

 :jwt/signed
 {:secret #or [#env JWT_SECRET "ZZPYUKNTZCBURPTN"]
  :alg :hs512
  :expire [7 :days]}

 :handler/ring
 {:router #ig/ref :router/core
  :api-path "/api"
  ;; :cookie-secret #or [#env COOKIE_SECRET "ZZPYUKNTZCBURPTN"]
  :jws #ig/ref :jwt/signed
  ;; #or [#env JWT_SECRET "ZZPYUKNTZCBURPTN"]
  ;; from ring.middleware.defaults. anti-forgery `false` by default because services may not require it
  :site-defaults-config {:params {:urlencoded true
                                  :multipart true
                                  :nested true
                                  :keywordize true}
                         ;; :cookies true
                         #_:session #_{:flash true
                                       :cookie-name "sour.graffiti"
                                       :cookie-attrs {:max-age 86400
                                                      :http-only true
                                                      :same-site :strict}}
                         #_:security #_{:anti-forgery false
                                        :xss-protection {:enable? true,
                                                         :mode :block}
                                        :frame-options :sameorigin
                                        :content-type-options :nosniff}
                         :static {:resources "public"}
                         :responses {:not-modified-responses true
                                     :absolute-redirects true
                                     :content-types true
                                     :default-charset "utf-8"}}}

 :reitit.routes/api
 {:base-path "/api"
  :env #ig/ref :system/env
  :query-fn #ig/ref :db.sql/query-fn}

 :router/routes
 {:routes #ig/refset :reitit/routes}

 :router/core
 {:routes #ig/ref :router/routes}

 :db.sql/connection
 #profile {:dev {:jdbc-url "jdbc:postgresql://localhost/sour?user=sour&password=a123456"}
           :test {:jdbc-url "jdbc:postgresql://localhost/sour-test?user=sour&password=a123456"}
           :prod {:jdbc-url #env JDBC_URL
                  :init-size 1
                  :min-idle 1
                  :max-idle 8
                  :max-active 32}}

 :db.sql/query-fn
 {:conn #ig/ref :db.sql/connection
  :options {}
  :filenames ["database/queries.sql" "user/user.sql"]}

 :db.sql/migrations
 {:store :database
  :migration-dir "database/migrations"
  :db {:datasource #ig/ref :db.sql/connection}
  :migrate-on-init? true}}
